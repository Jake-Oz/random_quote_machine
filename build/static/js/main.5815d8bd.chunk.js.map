{"version":3,"sources":["Quote.jsx","App.js","index.js"],"names":["Quote","props","React","createElement","id","style","backgroundColor","color","transition","className","quote","author","target","rel","href","tweetURL","onClick","tweet","generate","App","_useState","useState","_useState2","_slicedToArray","setQuote","_useState3","_useState4","setAuthor","_useState5","_useState6","setColor","_useState7","_useState8","quoteArray","setQuoteArray","quoteURL","colors","generateNewQuote","index","Math","floor","random","length","newColorIndex","useEffect","fetch","then","response","json","data","quotes","catch","error","console","log","_useState9","_useState10","setTweetURL","encodeURIComponent","ReactDOM","createRoot","document","getElementById","render","Fragment"],"mappings":"qLAEe,SAASA,EAAMC,GAC5B,OACEC,IAAAC,cAAA,OACEC,GAAG,UACHC,MAAO,CAAEC,gBAAiBL,EAAMM,MAAOC,WAAY,OAEnDN,IAAAC,cAAA,OAAKC,GAAG,aACNF,IAAAC,cAAA,OAAKC,GAAG,OAAOC,MAAO,CAAEE,MAAON,EAAMM,MAAOC,WAAY,OACtDN,IAAAC,cAAA,KAAGC,GAAG,SACJF,IAAAC,cAAA,KAAGM,UAAU,qBAAuB,IAAER,EAAMS,MAAO,IACnDR,IAAAC,cAAA,KAAGM,UAAU,wBAGjBP,IAAAC,cAAA,OAAKC,GAAG,SAASC,MAAO,CAAEE,MAAON,EAAMM,MAAOC,WAAY,OACxDN,IAAAC,cAAA,KAAGC,GAAG,eAAc,KAAGH,EAAMU,SAE/BT,IAAAC,cAAA,OAAKC,GAAG,WACNF,IAAAC,cAAA,KACEC,GAAG,cACHC,MAAO,CAAEC,gBAAiBL,EAAMM,MAAOC,WAAY,MACnDI,OAAO,SACPC,IAAI,sBACJC,KAAM,mCAAqCb,EAAMc,SACjDC,QAASf,EAAMgB,OAEff,IAAAC,cAAA,KAAGM,UAAU,mBAEfP,IAAAC,cAAA,UACEC,GAAG,YACHC,MAAO,CAAEC,gBAAiBL,EAAMM,MAAOC,WAAY,MACnDQ,QAASf,EAAMiB,UAChB,gBCgDIC,MA9Ef,WAAe,IAAAC,EACWC,mBAAS,KAAIC,EAAAC,YAAAH,EAAA,GAAhCV,EAAKY,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EACMJ,mBAAS,KAAIK,EAAAH,YAAAE,EAAA,GAAlCd,EAAMe,EAAA,GAAEC,EAASD,EAAA,GAAAE,EACEP,mBAAS,WAAUQ,EAAAN,YAAAK,EAAA,GAAtCrB,EAAKsB,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EACcV,mBAAS,IAAGW,EAAAT,YAAAQ,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAExBG,EACJ,yIACIC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA4BF,SAASC,IACP,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWR,EAAWS,QAC9CC,EAAgBJ,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,QACtDZ,EAASM,EAAOO,IAChBnB,EAASS,EAAWK,GAAO5B,OAC3BiB,EAAUM,EAAWK,GAAO3B,QAhB9BiC,oBAAU,WAZRC,MAAMV,GACHW,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GACLf,EAAce,EAAKC,UAEpBC,MAAM,SAACC,GAENC,QAAQC,IAAIF,MAOf,IAEHR,oBAAU,WACJX,EAAWS,OAAS,GACtBL,KAED,CAACJ,IASH,IAAAsB,EAE6BlC,mBAAS,IAAGmC,EAAAjC,YAAAgC,EAAA,GAArCxC,EAAQyC,EAAA,GAAEC,EAAWD,EAAA,GAQ1B,OACEtD,IAAAC,cAAA,WACED,IAAAC,cAACH,EAAK,CACJU,MAAOA,EACPC,OAAQA,EACRO,SAAUmB,EACV9B,MAAOA,EACPU,MAdN,WACEwC,EACE,8CACEC,mBAAmB,IAAMhD,EAAQ,KAAOC,KAYxCI,SAAUA,kBCrEL4C,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7D,IAAAC,cAAAD,IAAA8D,SAAA,KACE9D,IAAAC,cAACgB,EAAG","file":"static/js/main.5815d8bd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Quote(props) {\n  return (\n    <div\n      id=\"wrapper\"\n      style={{ backgroundColor: props.color, transition: \"2s\" }}\n    >\n      <div id=\"quote-box\">\n        <div id=\"text\" style={{ color: props.color, transition: \"2s\" }}>\n          <p id=\"quote\">\n            <i className=\"fa fa-quote-left\"></i> {props.quote}{\" \"}\n            <i className=\"fa fa-quote-right\"></i>\n          </p>\n        </div>\n        <div id=\"author\" style={{ color: props.color, transition: \"2s\" }}>\n          <p id=\"author-text\">- {props.author}</p>\n        </div>\n        <div id=\"buttons\">\n          <a\n            id=\"tweet-quote\"\n            style={{ backgroundColor: props.color, transition: \"2s\" }}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\"https://twitter.com/intent/tweet\" + props.tweetURL}\n            onClick={props.tweet}\n          >\n            <i className=\"fa fa-twitter\"></i>\n          </a>\n          <button\n            id=\"new-quote\"\n            style={{ backgroundColor: props.color, transition: \"2s\" }}\n            onClick={props.generate}\n          >\n            New quote\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Quote from \"./Quote\";\n\nfunction App() {\n  let [quote, setQuote] = useState(\" \");\n  let [author, setAuthor] = useState(\" \");\n  let [color, setColor] = useState(\"#16a085\");\n  let [quoteArray, setQuoteArray] = useState([]);\n\n  const quoteURL =\n    \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n  const colors = [\n    \"#F5B19C\",\n    \"#EDCABE\",\n    \"#E9B666\",\n    \"#BFD0CA\",\n    \"#A5B2B5\",\n    \"#0F4C81\",\n    \"#5C9090\",\n    \"#292643\",\n    \"#776483\",\n    \"#44426E\",\n    \"#BBAAB8\",\n    \"#73A857\",\n  ];\n\n  // fetch quotes once and assign them to a local state array\n  function getQuotes() {\n    fetch(quoteURL)\n      .then((response) => response.json())\n      .then((data) => {\n        setQuoteArray(data.quotes);\n      })\n      .catch((error) => {\n        // handle the error\n        console.log(error);\n      });\n  }\n\n  // Use the useEffect here so that the fetch doesn't happen everytime state changes\n  useEffect(() => {\n    getQuotes();\n  }, []);\n\n  useEffect(() => {\n    if (quoteArray.length > 0) {\n      generateNewQuote();\n    }\n  }, [quoteArray]);\n\n  // update the quote when the button is clicked\n  function generateNewQuote() {\n    let index = Math.floor(Math.random() * quoteArray.length);\n    let newColorIndex = Math.floor(Math.random() * colors.length);\n    setColor(colors[newColorIndex]);\n    setQuote(quoteArray[index].quote);\n    setAuthor(quoteArray[index].author);\n  }\n\n  let [tweetURL, setTweetURL] = useState(\"\");\n  function tweet() {\n    setTweetURL(\n      \"?hashtags=quotes&related=freecodecamp&text=\" +\n        encodeURIComponent('\"' + quote + '\" ' + author)\n    );\n  }\n\n  return (\n    <div>\n      <Quote\n        quote={quote}\n        author={author}\n        generate={generateNewQuote}\n        color={color}\n        tweet={tweet}\n        tweetURL={tweetURL}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <>\n    <App />\n  </>\n);\n"],"sourceRoot":""}